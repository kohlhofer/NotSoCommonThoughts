---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import PostListItem from '../../components/PostListItem.astro';
import BlogHero from '../../components/BlogHero.astro';
import AuthorBio from '../../components/AuthorBio.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

// Get all categories from tags
const categories = post.data.tags || [];

// Helper to format relative time
function getRelativeTime(date) {
  const now = new Date();
  const diff = Math.floor((now - date) / 1000);
  if (diff < 60) return `${diff} second${diff === 1 ? '' : 's'} ago`;
  if (diff < 3600) return `${Math.floor(diff / 60)} minute${Math.floor(diff / 60) === 1 ? '' : 's'} ago`;
  if (diff < 86400) return `${Math.floor(diff / 3600)} hour${Math.floor(diff / 3600) === 1 ? '' : 's'} ago`;
  if (diff < 2592000) return `${Math.floor(diff / 86400)} day${Math.floor(diff / 86400) === 1 ? '' : 's'} ago`;
  if (diff < 31536000) return `${Math.floor(diff / 2592000)} month${Math.floor(diff / 2592000) === 1 ? '' : 's'} ago`;
  return `${Math.floor(diff / 31536000)} year${Math.floor(diff / 31536000) === 1 ? '' : 's'} ago`;
}

// Get the main category from tags
const category = post.data.tags?.[0] || 'uncategorized';
const categoryName = category
  .split('-')
  .map(word => word.charAt(0).toUpperCase() + word.slice(1))
  .join(' ');

const allPosts = await getCollection('blog');
const relatedPosts = allPosts
  .filter(p => 
    // Exclude current post and unlisted posts, and only include posts that share tags
    p.slug !== post.slug && 
    !p.data.unlisted && 
    (p.data.tags || []).some(tag => categories.includes(tag))
  )
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, 4);
---

<Layout title={`${post.data.title} - NSCT`} description={post.data.description}>
  <!-- Hero Section -->
  <BlogHero post={post} />

  <!-- Two Column Layout: Sidebar + Article -->
  <div class="max-w-7xl mx-auto px-4 sm:px-8 pb-16">
<div class="flex flex-col lg:flex-row gap-8 lg:gap-12">
      <!-- Left spacer for balance -->
      <div class="hidden lg:block lg:w-16 shrink-0 lg:order-1"></div>

      <!-- Main Article Column -->
      <article class="flex-1 min-w-0 order-1 lg:order-2 prose prose-lg dark:prose-invert prose-headings:font-serif prose-a:text-red-600 dark:prose-a:text-red-400 prose-a:no-underline hover:prose-a:underline prose-p:font-serif prose-li:font-serif prose-headings:text-slate-900 dark:prose-headings:text-slate-100 prose-p:text-slate-600 dark:prose-p:text-slate-400 prose-strong:text-slate-900 dark:prose-strong:text-slate-100 prose-code:text-slate-900 dark:prose-code:text-slate-100 prose-blockquote:text-slate-600 dark:prose-blockquote:text-slate-400 prose-ul:text-slate-600 dark:prose-ul:text-slate-400 prose-ol:text-slate-600 dark:prose-ol:text-slate-400 prose-li:text-slate-600 dark:prose-li:text-slate-400 max-w-none">
        <Content />
      </article>

      <!-- Sidebar with Author Bio -->
      <aside class="lg:w-64 shrink-0 order-2 lg:order-3">
        <div class="lg:sticky lg:top-24">
          <AuthorBio />
        </div>
      </aside>
    </div>

    <!-- Divider -->
    <div class="flex justify-center my-12">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-600 dark:text-red-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5">
        <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m-8-8h16" />
      </svg>
    </div>
    
    <!-- Related Posts -->
    {relatedPosts.length > 0 && (
      <section class="mt-16">
        <div class="mb-6 pb-2 border-b border-slate-200 dark:border-slate-700">
          <h2 class="text-lg font-serif text-slate-900 dark:text-slate-100">More posts</h2>
        </div>
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {relatedPosts.map(rp => <PostListItem post={rp} />)}
        </div>
      </section>
    )}
  </div>
</Layout> 