---
import type { CollectionEntry } from 'astro:content';
import { formatDate } from '../utils';

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { title, description, image, useGenerativeThumbnail } = post.data;

// If useGenerativeThumbnail is true, we never show an image
let postImage = null;
if (!useGenerativeThumbnail) {
  // Try to get image from frontmatter first
  if (image) {
    postImage = image;
  } else {
    // Try to find first actual image in content
    const imageMatch = post.body.match(/!\[.*?\]\((.*?)\)/);
    if (imageMatch) {
      postImage = imageMatch[1];
    }
  }
}
---

<div class="text-center mb-6">
  <span class="text-sm font-medium text-red-600 dark:text-red-400">
    Featured Post
  </span>
</div>

<div class={`grid grid-cols-1 ${postImage ? 'sm:grid-cols-[1fr_2fr]' : ''} gap-12`}>
  {postImage && (
    <!-- Image Column -->
    <div>
      <a href={`/blog/${post.slug}/`} class="block group">
        <div class="overflow-hidden rounded">
          <img
            src={postImage}
            alt={title}
            class="w-full h-auto transition-transform group-hover:scale-105"
          />
        </div>
      </a>
    </div>
  )}

  <!-- Content Column -->
  <div>
    <a href={`/blog/${post.slug}/`} class="group">
      <h2 class="text-3xl font-serif text-slate-900 dark:text-slate-100 mb-4 group-hover:text-red-600 dark:group-hover:text-red-400 transition-colors">
        {title}
      </h2>
    </a>
    
    <p class="text-xl text-slate-600 dark:text-slate-400 mb-6">
      {description}
    </p>
    
    <div>
      <a 
        href={`/blog/${post.slug}/`} 
        class="inline-flex items-center px-5 py-2.5 text-base font-medium text-white bg-red-600 hover:bg-red-700 dark:bg-red-500 dark:hover:bg-red-600 rounded-lg transition-colors"
      >
        Read post
      </a>
    </div>
  </div>
</div> 